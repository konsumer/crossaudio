on: push
jobs:
  release-build:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        include:
          - os: windows
            build: |
              npm ci
              packages/cli/
              npx caxa -i . -o crossaudio.exe "{{caxa}}/node_modules/.bin/node" "{{caxa}}/crossaudio.cjs"
              7z a crossaudio-windows-${{ github.sha }}.zip crossaudio.exe
            artifact: crossaudio-windows-${{ github.sha }}.zip
          - os: macos
            build: |
              npm ci
              cd packages/cli/
              npx caxa -i . -o crossaudio "{{caxa}}/node_modules/.bin/node" "{{caxa}}/crossaudio.cjs"
              tar -czf "crossaudio-macos-${{ github.sha }}.tgz" "crossaudio"
            artifact: crossaudio-macos-${{ github.sha }}.tgz
          - os: ubuntu
            build: |
              sudo apt-get install -y libasound2-dev
              npm ci
              cd packages/cli/
              npx caxa -i . -o crossaudio "{{caxa}}/node_modules/.bin/node" "{{caxa}}/crossaudio.cjs"
              tar -czf "crossaudio-linux-${{ github.sha }}.tgz" "crossaudio"
            artifact: crossaudio-linux-${{ github.sha }}.tgz
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: |
          ${{ matrix.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  npm-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npx lerna publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [release-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: crossaudio-windows-${{ github.sha }}.exe
      - uses: actions/download-artifact@v2
        with:
          name: crossaudio-macos-${{ github.sha }}.app.tgz
      - uses: actions/download-artifact@v2
        with:
          name: crossaudio-linux-${{ github.sha }}.tgz
      - run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
        id: tag
      - uses: actions/create-release@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: crossaudio-windows-${{ github.sha }}.exe
          asset_name: crossaudio-windows-${{ steps.tag.outputs.tag }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: crossaudio-macos-${{ github.sha }}.tgz
          asset_name: crossaudio-macos-${{ steps.tag.outputs.tag }}.tgz
          asset_content_type: application/gzip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: crossaudio-linux-${{ github.sha }}.tgz
          asset_name: crossaudio-linux-${{ steps.tag.outputs.tag }}.tgz
          asset_content_type: application/gzip